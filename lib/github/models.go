package github_addons

import "time"

type PackageEvent struct {
	Action  string `json:"action"`
	Package struct {
		ID          int       `json:"id"`
		Name        string    `json:"name"`
		Namespace   string    `json:"namespace"`
		Description string    `json:"description"`
		Ecosystem   string    `json:"ecosystem"`
		PackageType string    `json:"package_type"`
		HTMLURL     string    `json:"html_url"`
		CreatedAt   time.Time `json:"created_at"`
		UpdatedAt   time.Time `json:"updated_at"`
		Owner       struct {
			Login             string `json:"login"`
			ID                int    `json:"id"`
			NodeID            string `json:"node_id"`
			AvatarURL         string `json:"avatar_url"`
			GravatarID        string `json:"gravatar_id"`
			URL               string `json:"url"`
			HTMLURL           string `json:"html_url"`
			FollowersURL      string `json:"followers_url"`
			FollowingURL      string `json:"following_url"`
			GistsURL          string `json:"gists_url"`
			StarredURL        string `json:"starred_url"`
			SubscriptionsURL  string `json:"subscriptions_url"`
			OrganizationsURL  string `json:"organizations_url"`
			ReposURL          string `json:"repos_url"`
			EventsURL         string `json:"events_url"`
			ReceivedEventsURL string `json:"received_events_url"`
			Type              string `json:"type"`
			SiteAdmin         bool   `json:"site_admin"`
		} `json:"owner"`
		PackageVersion struct {
			ID          int    `json:"id"`
			Version     string `json:"version"`
			Name        string `json:"name"`
			Description string `json:"description"`
			Summary     string `json:"summary"`
			Body        struct {
				Repository struct {
					Repository struct {
						ID                    int         `json:"id"`
						Name                  string      `json:"name"`
						OwnerID               int         `json:"owner_id"`
						ParentID              interface{} `json:"parent_id"`
						Sandbox               interface{} `json:"sandbox"`
						UpdatedAt             time.Time   `json:"updated_at"`
						CreatedAt             time.Time   `json:"created_at"`
						Public                bool        `json:"public"`
						Description           interface{} `json:"description"`
						Homepage              interface{} `json:"homepage"`
						SourceID              int         `json:"source_id"`
						PublicPush            interface{} `json:"public_push"`
						DiskUsage             int         `json:"disk_usage"`
						Locked                bool        `json:"locked"`
						PushedAt              time.Time   `json:"pushed_at"`
						WatcherCount          int         `json:"watcher_count"`
						PublicForkCount       int         `json:"public_fork_count"`
						PrimaryLanguageNameID int         `json:"primary_language_name_id"`
						HasIssues             bool        `json:"has_issues"`
						HasWiki               bool        `json:"has_wiki"`
						HasDownloads          bool        `json:"has_downloads"`
						RawData               struct {
							Data struct {
								CreatedByUserID          int           `json:"created_by_user_id"`
								PrimaryLanguageName      string        `json:"primary_language_name"`
								CompletedOnboardingTasks []interface{} `json:"completed_onboarding_tasks"`
							} `json:"data"`
						} `json:"raw_data"`
						OrganizationID    interface{} `json:"organization_id"`
						DisabledAt        interface{} `json:"disabled_at"`
						DisabledBy        interface{} `json:"disabled_by"`
						DisablingReason   interface{} `json:"disabling_reason"`
						HealthStatus      interface{} `json:"health_status"`
						PushedAtUsec      int         `json:"pushed_at_usec"`
						Active            bool        `json:"active"`
						ReflogSyncEnabled bool        `json:"reflog_sync_enabled"`
						MadePublicAt      time.Time   `json:"made_public_at"`
						UserHidden        int         `json:"user_hidden"`
						Maintained        bool        `json:"maintained"`
						Template          bool        `json:"template"`
						OwnerLogin        string      `json:"owner_login"`
						WorldWritableWiki bool        `json:"world_writable_wiki"`
						RefsetUpdatedAt   time.Time   `json:"refset_updated_at"`
						PropertiesVersion int         `json:"properties_version"`
						DisablingDetail   interface{} `json:"disabling_detail"`
					} `json:"repository"`
				} `json:"repository"`
				Info struct {
					Type       string      `json:"type"`
					Oid        string      `json:"oid"`
					Mode       int         `json:"mode"`
					Name       string      `json:"name"`
					Path       string      `json:"path"`
					Size       interface{} `json:"size"`
					Collection bool        `json:"collection"`
				} `json:"info"`
				Formatted bool `json:"_formatted"`
			} `json:"body"`
			HTMLURL           string        `json:"html_url"`
			TargetCommitish   string        `json:"target_commitish"`
			TargetOid         string        `json:"target_oid"`
			CreatedAt         time.Time     `json:"created_at"`
			UpdatedAt         time.Time     `json:"updated_at"`
			Metadata          []interface{} `json:"metadata"`
			ContainerMetadata struct {
				Tag struct {
					Name   string `json:"name"`
					Digest string `json:"digest"`
				} `json:"tag"`
				Labels struct {
					Description string `json:"description"`
					Source      string `json:"source"`
					Revision    string `json:"revision"`
					ImageURL    string `json:"image_url"`
					Licenses    string `json:"licenses"`
					AllLabels   struct {
						GithubInternalPlatforms string `json:"github.internal.platforms"`
					} `json:"all_labels"`
				} `json:"labels"`
				Manifest struct {
					Digest    string `json:"digest"`
					MediaType string `json:"media_type"`
					URI       string `json:"uri"`
					Size      int    `json:"size"`
					Config    struct {
						Digest    string `json:"digest"`
						MediaType string `json:"media_type"`
						Size      int    `json:"size"`
					} `json:"config"`
					Layers []interface{} `json:"layers"`
				} `json:"manifest"`
			} `json:"container_metadata"`
			PackageFiles        []interface{} `json:"package_files"`
			InstallationCommand string        `json:"installation_command"`
			PackageURL          string        `json:"package_url"`
		} `json:"package_version"`
		Registry struct {
			AboutURL string `json:"about_url"`
			Name     string `json:"name"`
			Type     string `json:"type"`
			URL      string `json:"url"`
			Vendor   string `json:"vendor"`
		} `json:"registry"`
	} `json:"package"`
	Repository struct {
		ID       int    `json:"id"`
		NodeID   string `json:"node_id"`
		Name     string `json:"name"`
		FullName string `json:"full_name"`
		Private  bool   `json:"private"`
		Owner    struct {
			Login             string `json:"login"`
			ID                int    `json:"id"`
			NodeID            string `json:"node_id"`
			AvatarURL         string `json:"avatar_url"`
			GravatarID        string `json:"gravatar_id"`
			URL               string `json:"url"`
			HTMLURL           string `json:"html_url"`
			FollowersURL      string `json:"followers_url"`
			FollowingURL      string `json:"following_url"`
			GistsURL          string `json:"gists_url"`
			StarredURL        string `json:"starred_url"`
			SubscriptionsURL  string `json:"subscriptions_url"`
			OrganizationsURL  string `json:"organizations_url"`
			ReposURL          string `json:"repos_url"`
			EventsURL         string `json:"events_url"`
			ReceivedEventsURL string `json:"received_events_url"`
			Type              string `json:"type"`
			SiteAdmin         bool   `json:"site_admin"`
		} `json:"owner"`
		HTMLURL          string        `json:"html_url"`
		Description      interface{}   `json:"description"`
		Fork             bool          `json:"fork"`
		URL              string        `json:"url"`
		ForksURL         string        `json:"forks_url"`
		KeysURL          string        `json:"keys_url"`
		CollaboratorsURL string        `json:"collaborators_url"`
		TeamsURL         string        `json:"teams_url"`
		HooksURL         string        `json:"hooks_url"`
		IssueEventsURL   string        `json:"issue_events_url"`
		EventsURL        string        `json:"events_url"`
		AssigneesURL     string        `json:"assignees_url"`
		BranchesURL      string        `json:"branches_url"`
		TagsURL          string        `json:"tags_url"`
		BlobsURL         string        `json:"blobs_url"`
		GitTagsURL       string        `json:"git_tags_url"`
		GitRefsURL       string        `json:"git_refs_url"`
		TreesURL         string        `json:"trees_url"`
		StatusesURL      string        `json:"statuses_url"`
		LanguagesURL     string        `json:"languages_url"`
		StargazersURL    string        `json:"stargazers_url"`
		ContributorsURL  string        `json:"contributors_url"`
		SubscribersURL   string        `json:"subscribers_url"`
		SubscriptionURL  string        `json:"subscription_url"`
		CommitsURL       string        `json:"commits_url"`
		GitCommitsURL    string        `json:"git_commits_url"`
		CommentsURL      string        `json:"comments_url"`
		IssueCommentURL  string        `json:"issue_comment_url"`
		ContentsURL      string        `json:"contents_url"`
		CompareURL       string        `json:"compare_url"`
		MergesURL        string        `json:"merges_url"`
		ArchiveURL       string        `json:"archive_url"`
		DownloadsURL     string        `json:"downloads_url"`
		IssuesURL        string        `json:"issues_url"`
		PullsURL         string        `json:"pulls_url"`
		MilestonesURL    string        `json:"milestones_url"`
		NotificationsURL string        `json:"notifications_url"`
		LabelsURL        string        `json:"labels_url"`
		ReleasesURL      string        `json:"releases_url"`
		DeploymentsURL   string        `json:"deployments_url"`
		CreatedAt        time.Time     `json:"created_at"`
		UpdatedAt        time.Time     `json:"updated_at"`
		PushedAt         time.Time     `json:"pushed_at"`
		GitURL           string        `json:"git_url"`
		SSHURL           string        `json:"ssh_url"`
		CloneURL         string        `json:"clone_url"`
		SvnURL           string        `json:"svn_url"`
		Homepage         interface{}   `json:"homepage"`
		Size             int           `json:"size"`
		StargazersCount  int           `json:"stargazers_count"`
		WatchersCount    int           `json:"watchers_count"`
		Language         string        `json:"language"`
		HasIssues        bool          `json:"has_issues"`
		HasProjects      bool          `json:"has_projects"`
		HasDownloads     bool          `json:"has_downloads"`
		HasWiki          bool          `json:"has_wiki"`
		HasPages         bool          `json:"has_pages"`
		ForksCount       int           `json:"forks_count"`
		MirrorURL        interface{}   `json:"mirror_url"`
		Archived         bool          `json:"archived"`
		Disabled         bool          `json:"disabled"`
		OpenIssuesCount  int           `json:"open_issues_count"`
		License          interface{}   `json:"license"`
		AllowForking     bool          `json:"allow_forking"`
		IsTemplate       bool          `json:"is_template"`
		Topics           []interface{} `json:"topics"`
		Visibility       string        `json:"visibility"`
		Forks            int           `json:"forks"`
		OpenIssues       int           `json:"open_issues"`
		Watchers         int           `json:"watchers"`
		DefaultBranch    string        `json:"default_branch"`
	} `json:"repository"`
	Sender struct {
		Login             string `json:"login"`
		ID                int    `json:"id"`
		NodeID            string `json:"node_id"`
		AvatarURL         string `json:"avatar_url"`
		GravatarID        string `json:"gravatar_id"`
		URL               string `json:"url"`
		HTMLURL           string `json:"html_url"`
		FollowersURL      string `json:"followers_url"`
		FollowingURL      string `json:"following_url"`
		GistsURL          string `json:"gists_url"`
		StarredURL        string `json:"starred_url"`
		SubscriptionsURL  string `json:"subscriptions_url"`
		OrganizationsURL  string `json:"organizations_url"`
		ReposURL          string `json:"repos_url"`
		EventsURL         string `json:"events_url"`
		ReceivedEventsURL string `json:"received_events_url"`
		Type              string `json:"type"`
		SiteAdmin         bool   `json:"site_admin"`
	} `json:"sender"`
}
